name: build

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15]
        compiler: [gcc]

    steps:
    - uses: actions/checkout@v2
    - name: Linux setup
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install \
          g++-8 \
          autoconf \
          automake \
          autotools-dev \
          autopoint \
          libtool \
          pkg-config \
          libssl-dev \
          libc-ares-dev \
          zlib1g-dev \
          libsqlite3-dev \
          libssh2-1-dev \
          libcppunit-dev
    - name: MacOS setup
      if: runner.os == 'macOS'
      run: |
        brew install cppunit gettext openssl libssh2 c-ares sqlite3 \
          autoconf automake pkg-config libtool
    - name: Setup clang
      if: matrix.compiler == 'clang'
      run: |
        echo 'CC=clang' >> $GITHUB_ENV
        echo 'CXX=clang++' >> $GITHUB_ENV
    - name: Setup gcc
      if: runner.os == 'Linux' && matrix.compiler == 'gcc'
      run: |
        echo 'CC=gcc-8' >> $GITHUB_ENV
        echo 'CXX=g++-8' >> $GITHUB_ENV
    - name: Libtool
      run: |
        autoreconf -i
    - name: Configure autotools (Linux)
      if: runner.os == 'Linux'
      run: |
        ./configure ARIA2_STATIC=yes --with-ca-bundle='/etc/ssl/certs/ca-certificates.crt'
    - name: Configure autotools (macOS)
      if: runner.os == 'macOS'
      run: |
        ./configure ARIA2_STATIC=yes
    - name: Build aria2
      run: |
        make -j$(nproc) check
    - name: Exporting binary path (Linux)
      if: runner.os == 'Linux'
      run: |
        echo "ARIA2C_PATH=/usr/bin/aria2c" >> $GITHUB_ENV
    - name: Exporting binary path (macOS)
      if: runner.os == 'macOS'
      run: |
        echo "ARIA2C_PATH=/usr/local/bin/aria2c" >> $GITHUB_ENV
    - name: Print artifact path
      run: |
        echo "ARIA2C_PATH: ${{ env.ARIA2C_PATH }}"
    - uses: actions/upload-artifact@v3
      with:
        name: aria2c_${{ runner.os }}
        path: ${{ env.ARIA2C_PATH }}
